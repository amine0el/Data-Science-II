version: '3.4'

services:
  MGC:
    restart: always
    image: webapp
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - djangodebug=true
        - redisserver=redis
        - sqlengine=django.db.backends.postgresql
        - sqldatabase=MGC
        - sqluser=MGC
        - sqlpassword=MGC
        - sqlhost=postgres
        - sqlport=5432
 #   network_mode: bridge
    entrypoint: /bin/bash
    command: -c "python manage.py migrate --noinput && gunicorn --bind 0.0.0.0:8000 MGC.wsgi --timeout 600"
    environment:
        - ALLOWED_HOSTS=localhost
    expose:
      - 8000
    volumes:
      - tmp_data:/tmp
      - static_volume:/app/static_collected
  celery:
    image: mgc
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - djangodebug=False
        - redisserver=redis
        - sqlengine=django.db.backends.postgresql
        - sqldatabase=MGC
        - sqluser=MGC
        - sqlpassword=MGC
        - sqlhost=postgres
        - sqlport=5432
    command: ["celery", "-A", "MGC", "worker", "-l", "info"]
    volumes:
      - tmp_data:/tmp
  celery-beat:
    image: mgc
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - djangodebug=False
        - redisserver=redis
        - sqlengine=django.db.backends.postgresql
        - sqldatabase=MGC
        - sqluser=MGC
        - sqlpassword=MGC
        - sqlhost=postgres
        - sqlport=5432
    command: ["celery", "-A", "MGC", "beat", "-l", "info", "--scheduler",  "django_celery_beat.schedulers:DatabaseScheduler"]
    volumes:
      - tmp_data:/tmp
  redis:
    image: redis:latest
    container_name: redis_mgc
    ports:
      - "6381:6379"
  postgres:
    restart: always
    image: postgres:12.10
    container_name: postgres_mgc
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  #  network_mode: bridge
    environment:
      - POSTGRES_USER=MGC
      - POSTGRES_PASSWORD=MGC
      - POSTGRES_DB=MGC
    ports:
      - "5439:5432"
  nginx:
    build: ./nginx
    ports:
      - 8006:80
    depends_on:
      - MGC
    volumes:
      - static_volume:/app/static_collected
volumes:
  postgres_data:
  static_volume:
  media:
  tmp_data:
    external: true

#test f√ºr jenkins build
